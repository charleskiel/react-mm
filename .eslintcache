[{"/mnt/f/Projects/react-mm/src/index.js":"1","/mnt/f/Projects/react-mm/src/App.js":"2","/mnt/f/Projects/react-mm/src/serviceWorker.js":"3","/mnt/f/Projects/react-mm/src/GetData.js":"4","/mnt/f/Projects/react-mm/src/components/Stocks.js":"5","/mnt/f/Projects/react-mm/src/components/dashboard/Home.js":"6","/mnt/f/Projects/react-mm/src/components/dashboard/Dashboard.js":"7","/mnt/f/Projects/react-mm/src/components/Header.js":"8","/mnt/f/Projects/react-mm/src/components/Heatmap.js":"9","/mnt/f/Projects/react-mm/src/components/StockCard.js":"10","/mnt/f/Projects/react-mm/src/components/StockDetail.js":"11","/mnt/f/Projects/react-mm/src/components/PriceIndicator.js":"12","/mnt/f/Projects/react-mm/src/components/dashboard/Account.js":"13","/mnt/f/Projects/react-mm/src/components/StockChart.js":"14","/mnt/f/Projects/react-mm/src/lib/canvasjs.react.js":"15","/mnt/f/Projects/react-mm/src/lib/canvasjs.min.js":"16"},{"size":504,"mtime":1609821101402,"results":"17","hashOfConfig":"18"},{"size":8322,"mtime":1610929084388,"results":"19","hashOfConfig":"18"},{"size":5086,"mtime":1609821102584,"results":"20","hashOfConfig":"18"},{"size":886,"mtime":1610127432376,"results":"21","hashOfConfig":"18"},{"size":3168,"mtime":1609821101336,"results":"22","hashOfConfig":"18"},{"size":2293,"mtime":1610928704990,"results":"23","hashOfConfig":"18"},{"size":3606,"mtime":1610928755688,"results":"24","hashOfConfig":"18"},{"size":2757,"mtime":1609900198739,"results":"25","hashOfConfig":"18"},{"size":607,"mtime":1609821101267,"results":"26","hashOfConfig":"18"},{"size":4307,"mtime":1609821101310,"results":"27","hashOfConfig":"18"},{"size":5934,"mtime":1609821101329,"results":"28","hashOfConfig":"18"},{"size":2410,"mtime":1609821101298,"results":"29","hashOfConfig":"18"},{"size":3541,"mtime":1610928554724,"results":"30","hashOfConfig":"18"},{"size":2719,"mtime":1609821101323,"results":"31","hashOfConfig":"18"},{"size":1720,"mtime":1609821101547,"results":"32","hashOfConfig":"18"},{"size":459247,"mtime":1609821101414,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"k3i6ng",{"filePath":"37","messages":"38","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/f/Projects/react-mm/src/index.js",[],["77","78"],"/mnt/f/Projects/react-mm/src/App.js",["79","80","81","82","83","84","85","86","87","88","89","90","91"],"import React, { Component } from \"react\";\r\nimport EventEmitter from \"eventemitter3\";\r\n//import moment from \"moment\"\r\nimport \"./App.scss\";\r\nimport Header from \"./components/Header\"\r\nimport Home from \"./components/dashboard/Home\";\r\nimport _ from \"lodash\"\r\nimport { Table, Layout, Menu, Breadcrumb,Row, Col, Card } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\nimport Stocks from \"./components/Stocks\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport \"./App.less\";\r\n\r\nimport Data from \"./GetData\"\r\nimport { data } from \"jquery\";\r\n\r\n\r\n\r\n//import { changeConfirmLocale } from \"antd/lib/modal/locale\";\r\n//import {\tMenuUnfoldOutlined,\tMenuFoldOutlined,\tVideoCameraOutlined,\tUploadOutlined,} from \"@ant-design/icons\";\r\n//import { responsiveMap } from \"antd/lib/_util/responsiveObserve\";\r\n\r\nclass App extends Component {\r\n\tws = WebSocket\r\n\trid = 0;\r\n\trequestid = () => { this.rid += 1; return this.rid; }\r\n\r\n\tsessionid = 0;\r\n\tnowplayingId = 0;\r\n\tpacketcount = 0;\r\n\tcasparpacketcount = 0;\r\n\tbroadcastpacketcount = 0;\r\n\tcontrollerpacketcount = 0;\r\n\r\n\tevent = new EventEmitter()\r\n\r\n\tsettings = {\r\n\t\tserverStatus: {},\r\n\t\tpacketcount: 0,\r\n\t};\r\n\r\n\tstate = {\r\n\t\tsettings: {\r\n\t\t\tcommandKey: this.commandKey,\r\n\t\t\tcommandKeyStatus: \"denied\",\r\n\t\t\tcommandKeyStyle: \"commandKeyStyle\",\r\n\t\t},\r\n\t\tequities: {},\r\n\t\twatchlists: {},\r\n\t\tselectedWatchlist: \"stocks\",\r\n\t\tsystemTime: 0,\r\n\t\tselectedStock: \"\",\r\n\t\tsubStocks: {},\r\n\t\ttickerStocks: {},\r\n\t\tstatus: {},\r\n\t\tpps: 0,\r\n\t\tactives: {\r\n\t\t\tACTIVES_NASDAQ: {},\r\n\t\t\tACTIVES_NYSE: {},\r\n\t\t\tACTIVES_OPTIONS: {},\r\n\t\t\tACTIVES_OTCBB: {}\r\n\t\t},\r\n\t\tshowpage: \"home\",\r\n\t\tmasking: true,\r\n\t};\r\n\r\n\r\n\tcomponentWillMount() {\r\n\t\t// this.event.on(\"connected\",() =>{\r\n\t\t// \tconsole.log(\"Connected\")\r\n\t\t// })\r\n\t}\r\n\r\n\tloadSocket = () => {\r\n\t\tthis.ws = new WebSocket(\"ws://192.168.1.102:7999\");\r\n\t\tthis.ws.onopen = (event) => {\r\n\t\t\tconsole.log(\"Connected to Server \", event.target.url);\r\n\t\t\t//this.functions.getWatchLists();\r\n\t\t\tlet login = JSON.stringify({\r\n\t\t\t\tservice: \"ADMIN\",\r\n\t\t\t\tcommand: \"LOGIN\",\r\n\t\t\t\trequestid: this.requestid(),\r\n\t\t\t\tusername: \"demo\",\r\n\t\t\t\tpassword: \"password\",\r\n\t\t\t});\r\n\r\n\t\t\tthis.ws.send(login);\r\n\t\t\tthis.functions.subscribe(\"STATS\")\r\n\t\t\tthis.ws.onmessage = (event) => {this.msgRec(JSON.parse(event.data))};\r\n\t\t\tthis.ws.onclose = (event) => {setTimeout(this.loadSocket, 2000);console.log(\"Disconnected \", event)};\r\n\t\t}\r\n\t\tthis.ws.onerror = (event) => { console.log(\"Error \", event);setTimeout(this.loadSocket, 2000)};\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.loadSocket()\r\n\t\tsetInterval(this.sendMsgBuffer, 200);\r\n\t\tsetInterval(this.updateRxBuffer, 200);\r\n\t\tsetInterval(this.getStatus, 2000);\r\n\r\n\t\t// fetch(\"http://192.168.1.102:8000/state\", {\r\n\t\t// \tmethod: \"GET\",\r\n\t\t// \t//mode: 'cors',\r\n\t\t// \theaders: {\r\n\t\t// \t\t\"Content-Type\": \"application/json\",\r\n\t\t// \t},\r\n\t\t// })\r\n\t\t// .then((response) => response.json())\r\n\t\t// \t.then((response) => {\r\n\t\t// \tconsole.log(response)\r\n\t\t// \tthis.setState((prevState) => {\r\n\t\t// \t\treturn { ...prevState, ...response };\r\n\t\t// \t});\r\n\t\t// \t//console.log(this.state)\r\n\t\t// \tthis.getStatus();\r\n\r\n\t\t// })\r\n\t\t// .catch((error) => {\r\n\t\t// \tconsole.error(\"Error:\", error);\r\n\t\t// });\r\n\t}\r\n\t\r\n\ttickcount = 0;\r\n\ttickbuffer = {};\r\n\r\n\tmsgRec = (msg) => {\r\n\t\tconsole.log(msg)\r\n\t\tif (msg.notify) {\r\n\t\t\tthis.setState({ heartbeat: msg.notify[0].heartbeat });\r\n\t\t}\r\n\r\n\t\tif (msg.content) {\r\n\t\t\t//console.log(m);\r\n\t\t\tswitch (msg.service) {\r\n\t\t\t\tcase \"CHART_EQUITY\":\r\n\t\t\t\t\tmsg.content.forEach((eq) => {\r\n\t\t\t\t\t\tif (this.ticktimestamp >= Date.now() - 1000) {\r\n\t\t\t\t\t\t\tthis.setState({ pps: (this.tickcount / (Date.now() - this.ticktimestamp)) * 1000 });\r\n\t\t\t\t\t\t\tthis.ticktimestamp = Date.now();\r\n\t\t\t\t\t\t\tthis.tickcount = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.tickbuffer[eq.key]) this.tickbuffer[eq.key] = { ...this.tickbuffer[eq.key], spark: [...this.state[eq.key].spark, eq] };\r\n\t\t\t\t\t\tthis.tickcount += 1;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"QUOTE\":\r\n\t\t\t\t\t//console.log(m)\r\n\t\t\t\t\tmsg.content.forEach((eq) => {\r\n\t\t\t\t\t\tthis.tickbuffer[eq.key] = { ...this.tickbuffer[eq.key], ...eq };\r\n\t\t\t\t\t\tthis.tickcount += 1;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"TIMESALE_FUTURES\":\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"ACTIVES_NASDAQ\":\r\n\t\t\t\tcase \"ACTIVES_NYSE\":\r\n\t\t\t\tcase \"ACTIVES_OPTIONS\":\r\n\t\t\t\tcase \"ACTIVES_OTCBB\":\r\n\t\t\t\t\tmsg.content.forEach((eq) => {this.activesBuffer[eq.key] = { ...this.activesBuffer[eq.key]}});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"ADMIN\":\r\n\t\t\t\t\tswitch(msg.type){}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//console.log(m);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (msg.response) {\r\n\t\t\tmsg.response.forEach((m) => {\r\n\t\t\t\tconsole.log(m)\r\n\t\t\t\tswitch (m.service) {\r\n\t\t\t\t\tcase \"ADMIN\":\r\n\t\t\t\t\t\tswitch (m.command){\r\n\t\t\t\t\t\t\tcase \"SETTING\":\r\n\t\t\t\t\t\t\t\tthis.setState((prevState) => {return {settings : {...prevState.settings, ...m.setting} }})\t\t\t\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"LOGIN\":\r\n\t\t\t\t\t\t\t\tif (m.content === \"OK\") { console.log(`Login Sucuess!`, m.sessionid); this.sessionid = m.sessionid;}\r\n\t\t\t\t\t\t\t\telse { console.log(`LOGIN FAILED!!`, msg.content.code, msg.content.msg); }\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(this.state.settings);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"SERVICE\":\r\n\t\t\t\t\t\tconsole.log(msg);\r\n\t\t\t\t\t\tswitch (m.command){\r\n\t\t\t\t\t\t\tcase \"SETTING\":\r\n\t\t\t\t\t\t\t\tthis.setState((prevState) => {return {settings : {...prevState.settings, ...m.setting} }})\t\t\t\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"SUB\":\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(this.state.settings);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log(`Default Message`, msg);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tmsgTxBuffer = []\r\n\tsendMsg = (c) => {\r\n\t\tthis.msgTxBuffer.push(c)\r\n\t};\r\n\t\r\n\tsendMsgBuffer = () => {\r\n\t\t// console.log(this.msgTxBuffer)\r\n\t\t// console.log(this.ws.readyState === 1)\r\n\t\tif (this.ws.readyState === 1 && this.msgTxBuffer.length > 0 && this.sessionid > 0) {\r\n\t\t\tthis.ws.send(JSON.stringify(this.msgTxBuffer.shift()));\r\n\t\t}\r\n\t}\r\n\r\n\r\n\ttoHHMMSS = (time) => {\r\n\t\tvar sec_num = parseInt(time, 10); // don't forget the second param\r\n\t\tvar hours = Math.floor(sec_num / 3600);\r\n\t\tvar minutes = Math.floor((sec_num - hours * 3600) / 60);\r\n\t\tvar seconds = sec_num - hours * 3600 - minutes * 60;\r\n\t\tif (hours < 10) {hours = \"0\" + hours;}\r\n\t\tif (minutes < 10) {minutes = \"0\" + minutes;}\r\n\t\tif (seconds < 10) {seconds = \"0\" + seconds;}\r\n\t\treturn hours + \":\" + minutes + \":\" + seconds;\r\n\t};\r\n\r\n\tticktimestamp = Date.now();\r\n\tactivesBuffer = {}\r\n\ttickbuffer = {};\r\n\t\r\n\tmsgRxBuffer = []\r\n\r\n\tupdateRxBuffer = () => {\r\n\t\tlet excTime = Date.now();\r\n\t\tlet buffer = {subStocks: this.tickbuffer,actives : this.activesBuffer}\r\n\t\tthis.tickbuffer = {};\r\n\t\tthis.activesBuffer = {}\r\n\r\n\t\tthis.setState((prevState) => {return { ...prevState, ...buffer }});\r\n\t\t//this.setState((prevState) => {return { ...prevState, ...this.tickbuffer }});\r\n\t\t//console.log(Date.now() - excTime,\"ms\");\r\n\t};\r\n\r\n\r\n\tfunctions = {\r\n\t\tsetSelectedWatchlist : (list) => { console.log(`Setting Watchlist to ${list}`); this.setState({ selectedWatchlist: list }); console.log(this.state)},\r\n\t\tsetSelectedStock: (stock) => { console.log(`Setting Chart to ${stock}`); this.setState({ selectedStock: stock }) },\r\n\t\tsubscribe: (command, keys = [], dataTypes = []) => { this.sendMsg({\"service\": \"SUB\", \"command\" : command, \"keys\" :keys, \"dataTypes\": dataTypes })}, \r\n\t\tgetWatchLists : () => { this.setState({ watchlists: Data.getWatchLists() })},\r\n\t\tswitchView : (page) => {this.setState({ showpage: page })},\r\n\t\tsetCommandkey : (key) => {\r\n\t\t\tconsole.log(key);\r\n\t\t\tthis.setState((prevState) => { return {settings : {...prevState.settings,...{commandKey: key} }}})\r\n\t\t\tthis.ws.send(JSON.stringify({requests: [{service: \"ADMIN\",command: \"SETCOMMANDKEY\",commandKey: key,requestid: this.requestid()}]}))\r\n\t\t}\r\n\t}\r\n\r\n\tevents = {\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<Header {...this.state}/>\r\n\t\t\t\t{this.state.showpage === \"home\" && <Home functions={this.functions} state={this.state}/>}\r\n\t\t\t\t{this.state.showpage === \"stocks\" && <Stocks functions={this.functions} state={this.state}/>}\r\n\t\t\t\t{this.state.showpage === \"crypto\" && <div>[Coinbase API page coming soon]</div>}\r\n\t\t\t\t{this.state.showpage === \"admin\" && <div>[working on this]</div>}\r\n\t\t\t\t{this.state.showpage === \"about\" && <div>[Check back in a few hours]</div>}\r\n\t\t\t</Layout>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App;\r\n","/mnt/f/Projects/react-mm/src/serviceWorker.js",[],"/mnt/f/Projects/react-mm/src/GetData.js",[],"/mnt/f/Projects/react-mm/src/components/Stocks.js",["92","93","94","95","96","97","98"],"import _ from \"lodash\";\r\nimport { Layout, Menu, Breadcrumb, Row, Col, Card,Cascader } from \"antd\";\r\nimport * as React from 'react';\r\nimport * as $ from 'jquery';\r\nimport StockDetail from \"./StockDetail\";\r\nimport StockCard from \"./StockCard\";\r\nimport OptionChainHeatmap from \"./Heatmap\";\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from \"@ant-design/icons\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Content, Sider } = Layout;\r\n\r\nexport default class Stock extends React.Component {\r\n\r\n\tlistStocks = () => {\r\n\r\n\t\tlet list = _.values(this.props.watchlists).filter(list => {\r\n\t\t\tif (list.id === this.props.selectedWatchlist) {\r\n\t\t\t\treturn list \r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (list[0]){\r\n\t\t\treturn (\r\n\t\t\t\tlist[0].items.map(stock => {\r\n\t\t\t\t\treturn <StockCard \r\n\t\t\t\t\t\tsetSelectedStock={this.setSelectedStock} \r\n\t\t\t\t\t\tkey={stock}\r\n\t\t\t\t\t\tid={stock} stock={this.props[stock]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tstate = {\r\n\t\tdata: [],\r\n\t};\r\n\t\r\n\toptions = [\r\n\t\t{\r\n\t\t\tvalue: 'zhejiang',\r\n\t\t\tlabel: 'Zhejiang',\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 'hangzhou',\r\n\t\t\t\t\tlabel: 'Hangzhou',\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'jiangsu',\r\n\t\t\tlabel: 'Jiangsu',\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 'nanjing',\r\n\t\t\t\t\tlabel: 'Nanjing',\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\t// tick = (data) =>{\r\n\t// \tconsole.log(`${this.props.key}`)\r\n\t// \tthis.setState({data : data})\r\n\t// }\r\n\r\n\r\n    cas = () => {\r\n\t    return <Cascader options={this.options} onChange={this.onChange}>\r\n\t\t<a href=\"#\">{this.props.id}</a>\r\n\t\t</Cascader>\r\n    }\r\n\r\n\trender() {\r\n\t\t//console.log(this.props.key)\r\n\t\t//if(this.props.id === \"TSLA\") console.log(this.props)\r\n\t\t//if(!this.props.id) console.log(this.props)\r\n\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<Sider style={{backgroundColor: \"black\"}}>\r\n\t\t\t\t<Menu mode=\"inline\" defaultSelectedKeys={[\"1\"]} defaultOpenKeys={[\"watchlists\"]} style={{ height: \"100%\", borderRight: 0 }}>\r\n\t\t\t\t\t<SubMenu\r\n\t\t\t\t\t\tkey=\"watchlists\"\r\n\t\t\t\t\t\ttitle={<span><UserOutlined/> Watchlists</span>}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{_.values(this.props.watchlists).map((list) => (\r\n\t\t\t\t\t\t\t<Menu.Item key={list.id} onClick={() => this.props.setSelectedWatchlist(list.id)}>\r\n\t\t\t\t\t\t\t\t{list.name}\r\n\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</SubMenu>\r\n\t\t\t\t\t<SubMenu\r\n\t\t\t\t\t\tkey=\"functions\"\r\n\t\t\t\t\t\ttitle={<span><LaptopOutlined />subnav 2</span>}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Menu.Item key=\"5\">Stock Detail</Menu.Item>\r\n\t\t\t\t\t</SubMenu>\r\n\t\t\t\t</Menu>\r\n\t\t\t</Sider>\r\n\t\t\t<Layout className=\"watchlist\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{/* <Breadcrumb style={{ margin: '10px 0' }}>\r\n\t\t\t\t\t\t\t<Breadcrumb.Item>Home</Breadcrumb.Item>\r\n\t\t\t\t\t\t\t<Breadcrumb.Item>List</Breadcrumb.Item>\r\n\t\t\t\t\t\t\t<Breadcrumb.Item>App</Breadcrumb.Item>\r\n\t\t\t\t\t\t\t</Breadcrumb> */}\r\n\r\n\t\t\t\t\t{this.listStocks()}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col span={18}>\r\n\t\t\t\t\t\t<Content\r\n\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Breadcrumb style={{ margin: \"10px 0\" }}>\r\n\t\t\t\t\t\t\t\t<Breadcrumb.Item>Home</Breadcrumb.Item>\r\n\t\t\t\t\t\t\t\t<Breadcrumb.Item>List</Breadcrumb.Item>\r\n\t\t\t\t\t\t\t\t<Breadcrumb.Item>App</Breadcrumb.Item>\r\n\t\t\t\t\t\t\t</Breadcrumb>\r\n\r\n\t\t\t\t\t\t\t{/* <StockDetail selectedStock={this.props.selectedStock} stock={this.props[this.props.selectedStock]} /> */}\r\n\t\t\t\t\t\t</Content>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Layout>\r\n\t\t</Layout>\r\n\t\t\t\r\n\t\t)\r\n\t}\r\n}\r\n","/mnt/f/Projects/react-mm/src/components/dashboard/Home.js",["99","100","101","102","103","104","105","106","107","108"],"import * as React from \"react\";\r\nimport {Badge, Tabs, Layout, Menu} from \"antd\";\r\nimport StockCard from \"../StockCard\";\r\nimport Account from \"./Account\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport currency from \"currency.js\";\r\nimport PriceIndicator from \"../PriceIndicator\";\r\nimport \"./Home.scss\";\r\nimport _ from \"lodash\";\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Content, Sider } = Layout;\r\n//{currency().format()}\r\nexport default class Home extends React.Component {\r\n\tstate = {\r\n\t\tshowpage: \"dashboard\",\r\n\t};\r\n\r\n\tcomponentWillMount(){\r\n\t\tthis.props.functions.subscribe(\"DASHBOARD\")\r\n\t}\r\n\tsetShowPage = (page) => {\r\n\t\tconsole.log(`Setting Home to ${page}`)\r\n\t\tthis.setState({showpage: page})\r\n\t}\r\n  \r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<Sider width={200} className=\"site-layout-background\">\r\n\t\t\t\t\t<Menu mode=\"inline\" defaultSelectedKeys={[\"0\"]} defaultOpenKeys={[\"watchlists\"]} style={{ height: \"100%\", borderRight: 0 }}>\r\n\t\t\t\t\t\t<Menu.Item key={\"home\"} onClick={() => this.setShowPage(\"home\")}>Main Home</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item key={\"account\"} onClick={() => this.setShowPage(\"account\")}>Account</Menu.Item>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<SubMenu key=\"sub2\" title={<span> <LaptopOutlined /> Statistics </span>} >\r\n\t\t\t\t\t\t\t<Menu.Item key=\"5\">Activities</Menu.Item>\r\n\t\t\t\t\t\t\t<Menu.Item key=\"6\">option6</Menu.Item>\r\n\t\t\t\t\t\t\t<Menu.Item key=\"7\">option7</Menu.Item>\r\n\t\t\t\t\t\t\t<Menu.Item key=\"8\">option8</Menu.Item>\r\n\t\t\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t\t\t<SubMenu key=\"admin\" title={<span><NotificationOutlined />Logs</span>} >\r\n\t\t\t\t\t\t\t<Menu.Item key=\"9\" onClick={() => this.props.functions.switchView(\"admin\")} >Event Logs</Menu.Item>\r\n\t\t\t\t\t\t\t<Menu.Item key=\"10\">Data Logs</Menu.Item>\r\n\t\t\t\t\t\t\t<Menu.Item key=\"11\">option11</Menu.Item>\r\n\t\t\t\t\t\t\t<Menu.Item key=\"12\">option12</Menu.Item>\r\n\t\t\t\t\t\t</SubMenu>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t</Sider>\r\n\r\n\t\t\t\t<Layout className=\"mainLayout\">\r\n\t\t\t\t\t{this.state.showpage === \"dashboard\" && this.props.state.actives && <Home functions={this.props.functions} state={this.props.state} />}\r\n\t\t\t\t\t{this.state.showpage === \"account\" && <Account functions={this.props.functions} state={this.props.state} />}\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t);\r\n\t}\r\n}","/mnt/f/Projects/react-mm/src/components/dashboard/Dashboard.js",["109","110","111","112","113","114","115","116","117"],"//import \"./Dashboard.scss\";\r\nimport * as React from \"react\";\r\nimport {Badge, Tabs, Layout} from \"antd\";\r\nimport StockCard from \"../StockCard\";\r\nimport currency from \"currency.js\";\r\nimport PriceIndicator from \"../PriceIndicator\";\r\nimport _ from \"lodash\";\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nimport \"../../../node_modules/react-vis/dist/style.css\";\r\nimport { XYPlot, LineSeries } from \"react-vis\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Content} = Layout;\r\n//{currency().format()}\r\nexport default class Dashboard extends React.Component {\r\n\tstate = {\r\n\t\tdata : []\r\n\t};\r\n\r\ncomponentWillMount(){\r\n\t\tthis.props.functions.subscribe(\"Dashboard\")\r\n\t}\r\n\tcomponentDidMount = () => {\r\n\t\tconsole.log(\"Loading Dashboard\")\r\n\t\tconsole.log(this.props)\r\n\t}\r\n\r\n\tlineChart = () => {\r\n\t\treturn (\r\n\t\t<XYPlot height={200} width={400}>\r\n\t\t\t<LineSeries \r\n\t\t\tdata={this.state.data.liquidationValue}\r\n\t\t\tstrokeWidth={1}\r\n\t\t\tcurve=\"curveBasis\"\r\n\t\t\t/>\r\n\t\t\t{/* <LineSeries \r\n\t\t\tdata={this.state.data.longMarginValue}\r\n\t\t\tstrokeWidth={1}\r\n\t\t\tcolor={\"red\"}\r\n\t\t\t/>\r\n\t\t\t */}\r\n\t\t</XYPlot>\r\n\t);\r\n\t   }\r\n\r\n\r\n\trender() {\r\n\t\t//console.log(this.props);\r\n\t\treturn (\r\n\t\t\t<Layout className=\"Dashboard\">\r\n\t\t\t\t<h2>Dashboard</h2>\r\n\t\t\t\t\r\n\t\t\t\t{/* {this.lineChart(this.state.data)} */}\r\n\t\t\t\t<Tabs className=\"activesTabs\" defaultActiveKey=\"1\" tabPosition={\"left\"}>\r\n\r\n\t\t\t\t\t{ [\"NYSE\",\"NASDAQ\",\"OTCBB\"].map(active => {\r\n\t\t\t\t\treturn <TabPane tab={active} key={active} >\r\n\t\t\t\t\t\t<h4>Most active {active} </h4>\r\n\t\t\t\t\t\t<Tabs className=\"activesTabs\" defaultActiveKey=\"0\" tabPosition=\"top\">\r\n\t\t\t\t\t\t{_.values(this.props.state.actives[\"ACTIVES_\" + active]).map((act) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<TabPane tab={`${act.sampleDuration / 60}min`} key={`${act.sampleDuration / 60}min`} >\r\n\t\t\t\t\t\t\t\t\t\t<small>({act.sampleDuration / 60}min)</small>\r\n\t\t\t\t\t\t\t\t\t\t<table style={{ fontSize: \"10px\", width: \"400px\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Symbol</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Volume</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Price Chng</th>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t{act.groups.map((pos) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.state.subStocks[pos.symbol] ? \"+\" : \"-\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pos.symbol}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{pos.volume}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{pos.priceChange}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<TabPane tab={`ACTIVES_OPTIONS`} key={\"ACTIVES_OPTIONS\"}>\r\n\t\t\t\t\t<h4>Most active options </h4>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<Tabs className=\"activesTabs\" defaultActiveKey=\"0\" tabPosition=\"top\">\r\n\t\t\t\t\t\t{_.values(this.props.state.actives.ACTIVES_OPTIONS).map((act) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TabPane tab={`${act.sampleDuration / 60}min`} key={act.sampleDuration} >\r\n\t\t\t\t\t\t\t\t\t<small>({act.sampleDuration / 60}min)</small>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Symbol</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Volume</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Price Chng</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t{act.groups.map((pos) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.state.subStocks[pos.name] ? \"+\" : \"-\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pos.symbol}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{pos.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{pos.volume}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{pos.priceChange}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n}","/mnt/f/Projects/react-mm/src/components/Header.js",["118","119","120","121","122","123","124","125","126","127"],"import React from 'react'\r\nimport PriceIndicator from \"./PriceIndicator\";\r\nimport { connect } from 'react-redux'\r\nimport \"./Marquee.scss\";\r\nimport \"./Header.scss\";\r\nimport {Input, Layout, Menu, Breadcrumb,Row, Col, Card } from 'antd';\r\n\r\nimport { KeyOutlined ,SettingOutlined} from \"@ant-design/icons\";\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n\r\nconst { SubMenu, ItemGroup } = Menu;\r\n\r\n//const { Header, Content, Sider } = Layout;\r\n\r\n\r\nexport default class AppHeader extends React.Component {\r\n\r\n\tcomponentWillMount = () => {\r\n\t\t///this.props.functions.subscribe(\"SPY\",\"QQQ\",\"GLD\",\"SLV\",\"AMD\",\"NVDA\",\"MU\",\"TAN\",)\r\n\t}\r\n\r\n\trender() {\r\n\t\t//console.log(this.props)\r\n\t\t//console.log(this.props[\"CAT\"]);\r\n\r\n\t\treturn (\r\n\t\t\t<Header className=\"header\">\r\n\t\t\t\t<tr className=\"logo\" />\r\n\t\t\t\t<Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]} className=\"headerMenu\">\r\n\t\t\t\t\t<Menu.Item key=\"1\" onClick={() => this.props.functions.switchView(\"dashboard\")}>\r\n\t\t\t\t\t\tDashboard\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key=\"2\" onClick={() => this.props.functions.switchView(\"stocks\")}>\r\n\t\t\t\t\t\tStocks\r\n\t\t\t\t\t\t\t{/* <Menu.ItemGroup title=\"Item 1\">\r\n\t\t\t\t\t\t\t\t<Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n\t\t\t\t\t\t\t\t<Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n\t\t\t\t\t\t\t</Menu.ItemGroup>\r\n\t\t\t\t\t\t\t<Menu.ItemGroup title=\"Item 2\">\r\n\t\t\t\t\t\t\t\t<Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n\t\t\t\t\t\t\t\t<Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n\t\t\t\t\t\t\t</Menu.ItemGroup> */}\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key=\"3\" onClick={() => this.props.functions.switchView(\"crypto\")}>\r\n\t\t\t\t\t\tCrypto\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key=\"4\" onClick={() => this.props.functions.switchView(\"admin\")}>\r\n\t\t\t\t\t\tAdmin\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key=\"5\" onClick={() => this.props.functions.switchView(\"about\")}>\r\n\t\t\t\t\t\tAbout\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</Menu>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tid=\"commandKey\"\r\n\t\t\t\t\tref=\"commandKey\"\r\n\t\t\t\t\tprefix={<KeyOutlined />}\r\n\t\t\t\t\tplaceholder=\"Enter access key\"\r\n\t\t\t\t\tonChange={(evt) => this.props.functions.setCommandkey(evt.target.value)}\r\n\t\t\t\t\tclassName={this.props.settings.commandKeyStyle}\r\n\t\t\t\t></Input>\r\n\r\n\t\t\t\t<tr className=\"marquee\">\r\n\t\t\t\t\t<tr className=\"marquee__content\">\r\n\t\t\t\t\t\t<ul className=\"list-inline\">\r\n\t\t\t\t\t\t\t{this.props.watchlists > 0 &&\r\n\t\t\t\t\t\t\t\tthis.props.watchlists[7].items.map((stock) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"marqueeItem\">\r\n\t\t\t\t\t\t\t\t\t\t\t{stock} - {<PriceIndicator commandKeyStatus={this.props.settings.commandKeyStatus} price={this.props[stock][\"3\"]} />}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tr>\r\n\t\t\t</Header>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// const mapStateToProps = (state) = ({\r\n// \tcurrentUser: state.user.currentUser\r\n// })\r\n\r\n//export default connect(mapStateToProps)(Header)","/mnt/f/Projects/react-mm/src/components/Heatmap.js",["128","129"],"import * as React from 'react';\r\nimport * as $ from 'jquery';\r\nimport _ from 'lodash'\r\n\r\nexport default class OptionChainHeatmap\r\n    extends React.Component {\r\n    state = {\r\n        data: [],\r\n        dates: [],\r\n        strikes: [],\r\n        selectedCall: {}\r\n    };\r\n\r\n    list = []\r\n    dates = []\r\n    strikes = []\r\n    componentDidMount() {\r\n    }\r\n    \r\n    hover = (e) => {\r\n    }\r\n    \r\n    leave = (e) => {\r\n        //console.log(\"leave\")\r\n        //console.log(e)\r\n        e.target.style.backgroundColor = '#000';\r\n    }\r\n    \r\n    \r\n          \r\n        \r\n          \r\n    \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/mnt/f/Projects/react-mm/src/components/StockCard.js",["130","131","132","133","134","135"],"import PriceIndicator from \"./PriceIndicator\";\r\nimport { Card as div , Cascader, Row, Col} from 'antd';\r\nimport * as React from 'react';\r\nimport * as $ from 'jquery';\r\nimport \"../App.scss\";\r\nimport \"./StockCard.scss\";\r\nimport moment from 'moment'\r\nimport CanvasJSReact from '../lib/canvasjs.react';\r\n//var CanvasJSReact = require('./canvasjs.react');\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nexport default class StockCard\r\n\textends React.Component {\r\n\tstate = {\r\n\t\tdata: [],\r\n\t\tplColor : \"darkgrey\"\r\n\t};\r\n\toptions = [\r\n\t\t{\r\n\t\t\tvalue: 'zhejiang',\r\n\t\t\tlabel: 'Zhejiang',\r\n\t\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tvalue: 'hangzhou',\r\n\t\t\t\tlabel: 'Hangzhou',\r\n\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 'jiangsu',\r\n\t\t\tlabel: 'Jiangsu',\r\n\t\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tvalue: 'nanjing',\r\n\t\t\t\tlabel: 'Nanjing',\r\n\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n    \tcas = () => {\r\n\t    return <Cascader options={this.options} onChange={this.onChange}>\r\n\t\t<a href=\"#\">{this.props.id}</a>\r\n\t\t</Cascader>\r\n\t}\r\n\t\r\n\texchange = () => {\r\n\t\tswitch (this.props.stock[\"16\"]) {\r\n\t\t\t\r\n\t\t\tcase \"n\" :\r\n\t\t\t\treturn (<span>NYSE</span>)\r\n\t\t\tcase \"a\" :\r\n\t\t\t\treturn (<span>AMEX</span>)\r\n\t\t\tcase \"q\" :\r\n\t\t\t\treturn (<span>NASDAQ</span>)\r\n\t\t\tcase \"u\" :\r\n\t\t\t\treturn (<span>OTCBB</span>)\r\n\t\t\tcase \"p\" :\r\n\t\t\t\treturn (<span>PACIFIC</span>)\r\n\t\t\tcase \"x\" :\r\n\t\t\t\treturn (<span>INDICES</span>)\r\n\t\t\tcase \"g\" :\r\n\t\t\t\treturn (<span>AMEX_INDEX</span>)\r\n\t\t\tcase \"m\" :\r\n\t\t\t\treturn (<span>MUTUAL_FUND</span>)\r\n\t\t\tcase \"9\" :\r\n\t\t\t\treturn (<span>PINK_SHEET</span>)\r\n\t\t\tdefault:\r\n\t\t\t\treturn (<span>jj</span>)\r\n\t\t}\r\n\t}\r\n\r\n\toptions = {\r\n\t\tanimationEnabled: true,\r\n\t\ttheme: \"dark1\",\r\n\t\twidth: 400,\r\n\t\theight: 200,\r\n\t\tbackgroundColor: \"rgba($color: #000000, $alpha: .0);\",\r\n\t\taxisX:{\r\n\t\t\tvalueFormatString: \"DD MMM\",\r\n\t\t\tcrosshair: {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tsnapToDataPoint: true\r\n\t\t\t}\r\n\t\t},\r\n\t\taxisY: {\r\n\t\t\tminimum : this.props.stock[13],\r\n\t\t\tmaximum : this.props.stock[12],\r\n\t\t\tcrosshair: {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tsnapToDataPoint: true,\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata: [{\r\n\t\t\ttype: \"line\",\r\n\t\t\tlineThickness: 1,\r\n\t\t\txValueFormatString: \"DD MMM\",\r\n\t\t\tyValueFormatString: \"$##0.00\",\r\n\t\t\tdataPoints: [...this.props.stock.spark.map(tick => {\r\n\t\t\t\treturn {x: new Date(tick[7]) ,y: tick[3] }\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}]\r\n\t}\r\n\t\r\n\tbackgroundcolor = () => {\r\n\t\t// if (this.props.stock.key === \"SPY\" ) console.log(\"last\", this.props.stock[\"3\"]);\r\n\t\t// if (this.props.stock.key === \"SPY\" ) console.log(\"last - open\" ,this.props.stock[\"3\"] - this.props.stock[\"28\"]);\r\n\t\t// if (this.props.stock.key === \"SPY\" ) console.log(this.props.stock[\"3\"] - this.props.stock[\"29\"]);\r\n\t\t//return { color: `rgb(${128 * (this.props.stock[\"3\"] - this.props.stock[\"29\"])}, 64, 64) ` };\r\n\t\treturn { color: `rgb(128, 64, 64) `};\r\n\t}\r\n\r\n\trender() {\r\n\t\t//if(!this.props.id) console.log(this.props)\r\n\t\t//console.log(this.props)\r\n\t\treturn (\r\n\t\t\t<tr className=\"stockCard\">\r\n\t\t\t\t<background style={this.backgroundcolor()}>{this.props.stock.key}</background>\r\n\t\t\t\t<div className=\"chart\" style={this.backgroundcolor()}>\r\n\t\t\t\t\t<CanvasJSChart options = {this.options} \r\n\t\t\t\t\t/* onRef={ref => this.chart = ref} */\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<span className=\"description\">{this.props.stock[25] ? this.props.stock[25].replace(\" - Common Stock\", \"\") : this.props.stock.key}</span>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t<tr className=\"top\">\r\n\r\n\t\t\t\t\t<tr className=\"stats\">\r\n\t\t\t\t\t\t<td className=\"bigStat\">\r\n\t\t\t\t\t\t\t{<PriceIndicator price={this.props.stock[\"3\"]} />}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td className=\"details\" >\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>Bid: {<PriceIndicator price={this.props.stock[\"1\"]} />}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>Ask: {<PriceIndicator price={this.props.stock[\"1\"]} />}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>Volume: {<PriceIndicator price={this.props.stock[\"8\"]} />}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tr>\r\n\t\t\t\t\r\n\t\t\t\t<tr className=\"bottom\">\r\n\t\t\t\t\t<tr className=\"info\">\r\n\t\t\t\t\t\t{this.exchange()}\r\n\t\t\t\t\t\t<sendto>\r\n\t\t\t\t\t\t\t<sendto1 onClick={() => this.props.commands.sendto(1)}>-</sendto1>\r\n\t\t\t\t\t\t\t<sendto2 onClick={() => this.props.commands.sendto(2)}>-</sendto2>\r\n\t\t\t\t\t\t\t<sendto3 onClick={() => this.props.commands.sendto(3)}>-</sendto3>\r\n\t\t\t\t\t\t\t<sendto4 onClick={() => this.props.commands.sendto(4)}>-</sendto4>\r\n\t\t\t\t\t\t</sendto>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tr>\r\n\t\t\t</tr>\r\n\t\t);\r\n\t}\r\n}\r\n","/mnt/f/Projects/react-mm/src/components/StockDetail.js",["136","137","138","139","140"],"import { Card , Cascader} from 'antd';\r\nimport { Row, Col} from 'antd';\r\nimport * as React from 'react';\r\nimport * as $ from 'jquery';\r\nimport OptionChainHeatmap from './Heatmap'\r\nimport StockChart from './StockChart'\r\nimport _ from 'lodash'\r\n\r\n\r\nexport default class StockDetail extends React.Component {\r\n    state = {\r\n        selectedCall: {},\r\n        chartData: [],\r\n        frequency: \"1\",\r\n        frequencyType: \"daily\",\r\n        period: \"6\",\r\n        periodType: \"month\",\r\n    };\r\n\r\n    periodOptions = [\r\n        {\r\n            value: 1,\r\n            label: \"1\",\r\n        },\r\n        {\r\n            value: 2,\r\n            label: \"2\",\r\n        },\r\n        {\r\n            value: 3,\r\n            label: \"3\",\r\n        },\r\n        {\r\n            value: 6,\r\n            label: \"6\",\r\n        },\r\n    ];\r\n\r\n    componentDidMount() {\r\n        console.log(\"DidMount\")\r\n        this.getChart()\r\n        this.loadchain()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.selectedStock !== this.props.selectedStock){\r\n            //console.log(`Stock Changed Getting chart for ${this.props.selectedStock}`)\r\n            this.getChart()\r\n            this.loadchain()\r\n            //console.log(this.state)\r\n        }\r\n        //this.getChart()\r\n    }\r\n    \r\n    getChart = () => {\r\n        console.log(\"getChart\")\r\n        let str = \"\"\r\n        console.log(this.props.selectedStock);\r\n        str = `https://charleskiel.dev:8000/pricehistory?symbol=${this.props.selectedStock}&frequency=${this.state.frequency}&frequencyType=${this.state.frequencyType}&period=${this.state.period}&periodType=${this.state.periodType}`\r\n        console.log(str)\r\n\t\tfetch(str, {\r\n            method: \"GET\",\r\n\t\t\tmode: \"cors\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t})\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n            this.setState({ chartData: response });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    \r\n    \r\n    loadchain = () => {\r\n        console.log(\"getChain\")\r\n        let str = \"\"\r\n        console.log(this.props.selectedStock);\r\n        str = `https://charleskiel.dev:8000/chains?symbol=${this.props.selectedStock}`\r\n        console.log(str)\r\n\t\tfetch(str, {\r\n            method: \"GET\",\r\n\t\t\tmode: \"cors\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t})\r\n        .then((response) => response.json())\r\n        .then((chain) => {\r\n            console.log(chain)\r\n            //console.log(_.values(chain.callExpDateMap[\"2020-05-29:4\"]))\r\n            this.chains = [chain.callExpDateMap,chain.putExpDateMap]\r\n        \r\n        })\r\n\r\n    }\r\n    //onChange = (value, selectedOptions) => { }\r\n    \r\n    render() {\r\n        const { chartData } = this.state;\r\n        //console.log(this.props)\r\n        if (this.props.selectedStock) {\r\n            return (\r\n                <div>\r\n                    <h1>{this.props.selectedStock}</h1>\r\n                    Chart Range:\r\n                    <Cascader options={this.periodOptions} onChange={this.onChange}>\r\n                        <a href=\"#\">{this.props.selectedStock}</a>\r\n                    </Cascader>\r\n                    \r\n                    <small>\r\n                        <Row>\r\n                            <Col span={12}>Bid: {this.props.stock['1']}</Col>\r\n                            <Col span={12}>Ask: {this.props.stock['2']}</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={12}>Vol: {this.props.stock['8']}</Col>\r\n                            <Col span={12}>{this.props.stock['4']}</Col>\r\n                        </Row>\r\n                    </small>\r\n                    <StockChart chartData={this.state.chartData} symbol={this.props.selectedStock}/>\r\n                    <div style={{width: 500, height: 200}}>\r\n                        {this.state.selectedCall.description && \r\n                            <div>\r\n                                Call:\r\n                                <p>{this.state.selectedCall.description}</p>\r\n                                <p>{this.state.selectedCall.putCall}</p>\r\n                                <p>{this.state.selectedCall.bid}</p>\r\n                                <p>{this.state.selectedCall.ask}</p>\r\n                                <p>{this.state.selectedCall.bid}</p>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div>{this.chains.map(chain =>{\r\n                        return <div><table style={{width: \"1200px\"}}>{\r\n                            _.map(chain, (exp , x)=> {\r\n                                //console.log(chain)\r\n                                //console.log(exp)\r\n                                //console.log(x)\r\n                                return (<tr>\r\n                                    <td style={{fontSize:\"10px\" , padding: \"1px\", width: \"60px\"}}>{x }</td>\r\n                                    {_.values(exp).map( strike => {\r\n                                        return (<td\r\n                                        style={{width: \"10px\", height: \"10px\", backgroundColor: \"#F00\", border: \"1px solid #000\",\r\n                                        margin: \"0px\"}}\r\n                                        onMouseLeave={this.leave}\r\n                        \r\n                                        onMouseOver={this.hover = (e) => {this.setState({selectedCall : strike[0]}) } }>\r\n                                        {strike.bid}\r\n                                        </td>)\r\n                                    })}\r\n                                </tr>)\r\n                            })\r\n                        }</table></div>\r\n                    })}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div>Select a stock</div>;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","/mnt/f/Projects/react-mm/src/components/PriceIndicator.js",[],"/mnt/f/Projects/react-mm/src/components/dashboard/Account.js",["141","142","143","144","145","146","147","148","149"],"import * as React from \"react\";\r\nimport {Badge, Tabs, Layout} from \"antd\";\r\nimport StockCard from \"../StockCard\";\r\nimport currency from \"currency.js\";\r\nimport PriceIndicator from \"../PriceIndicator\";\r\nimport _ from \"lodash\";\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Content} = Layout;\r\n//{currency().format()}\r\nexport default class Account extends React.Component {\r\n\tstate = {\r\n\t\tdata: [],\r\n\t};\r\n\r\n\tcomponentWillMount(){\r\n\t\tthis.props.functions.subscribe(\"ACCOUNT\")\r\n\t\tthis.getdata()\r\n\t\tsetInterval(this.getdata, 2000)\r\n\r\n\t}\r\n\r\n\tgetdata = () => {\r\n\t\tfetch(\"http://192.168.1.102:8000/accountStatus\", {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\t//mode: 'cors',\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t})\r\n\t\t.then((response) => response.json())\r\n\t\t.then(response => {\r\n\t\t\tthis.setState({data : response})\r\n\t\t\tthis.forceUpdate()\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tpositions = (positions) => {\r\n\r\n\t\treturn positions.map(pos => {\r\n\t\t\t//console.log(pos)\r\n\t\t\treturn (\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<position>{pos.shortQuantity > 0 ? <span className=\"short\">- {pos.shortQuantity} </span> : <span className=\"long\">+ {pos.longQuantity}</span>}</position>\r\n\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t{pos.instrument.assetType === \"OPTION\" ? <td>{pos.instrument.underlyingSymbol}</td> : <td>{pos.instrument.symbol}</td>}\r\n\r\n\t\t\t\t\t<td>{pos.instrument.assetType}</td>\r\n\t\t\t\t\t{pos.instrument.assetType === \"OPTION\" ? <td>{pos.instrument.description} </td> : <td>{this.props[pos.instrument.symbol][25]}</td>}\r\n\r\n\t\t\t\t\t<td className=\"plPc\">{currency(pos.currentDayProfitLossPercentage * 100).value}%</td>\r\n\t\t\t\t\t<td className=\"pl\">{currency(pos.currentDayProfitLoss).format()}</td>\r\n\t\t\t\t\t{/* <td className=\"mkvalue\" >{currency(pos.marketValue).format()}</td> */}\r\n\t\t\t\t\t<td className=\"mkvalue\" ><PriceIndicator price={pos.marketValue} masking={this.props.state.masking} /></td>\r\n\t\t\t\t</tr>\r\n\t\t\t);\r\n\t\t})\r\n\r\n\t}\r\n\trender() {\r\n\t\t//console.log(this.props);\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<Layout className=\"Account\">\r\n\t\t\t\t<h1>Account Home Page</h1>\r\n\t\t\t\t<span style={{width : \"50%\"}}>\r\n\t\t\t\t\t<h1>Account Status</h1>\r\n\t\t\t\t\t<div><strong>Current Balance</strong> : <PriceIndicator price={this.state.app.account[0].securitiesAccount.currentBalances.liquidationValue}  commandKeyStatus={this.state.settings.commandKeyStatus}/></div>\r\n\t\t\t\t\t{/* <div><strong>Current Balance</strong> : <PriceIndicator price={this.state.app.account[0].securitiesAccount.currentBalances.liquidationValue}  commandKeyStatus={this.state.settings.commandKeyStatus}/>({this.state.app.account[0].securitiesAccount.currentBalances.liquidationValue /this.state.app.account[0].securitiesAccount.initialBalances.liquidationValue })  </div> */}\r\n\t\t\t\t\t<div><strong>Initial Balance</strong> : <PriceIndicator price={this.state.app.account[0].securitiesAccount.initialBalances.liquidationValue} commandKeyStatus={this.state.settings.commandKeyStatus}/></div>\r\n\t\t\t\t\t<div><strong>Stock Buying Power</strong> : <PriceIndicator price={this.state.app.account[0].securitiesAccount.projectedBalances.stockBuyingPower} commandKeyStatus={this.state.settings.commandKeyStatus}/></div>\r\n\t\t\t\t\t<table className=\"accountTable\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Side</th>\r\n\t\t\t\t\t\t\t<th>Key</th>\r\n\t\t\t\t\t\t\t<th>Type</th>\r\n\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t<th>P/L %</th>\r\n\t\t\t\t\t\t\t<th>Total P/L</th>\r\n\t\t\t\t\t\t\t<th>Market Value</th>\r\n\t\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t\t{this.positions(this.state.app.account[0].securitiesAccount.positions)}\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</span>\r\n\t\t\t</Layout>\r\n\t\t)\t\r\n\t}\r\n}","/mnt/f/Projects/react-mm/src/components/StockChart.js",["150","151","152","153"],"import React from 'react';\r\nimport moment from 'moment'\r\n\r\nimport { VictoryBar, VictoryChart, VictoryTheme, VictoryAxis, VictoryLine } from 'victory';\r\nimport ReactDOM from 'react-dom';\r\nimport * as V from 'victory';\r\nimport * as $ from 'jquery';\r\n\r\n\r\n// import { Group } from '@vx/group';\r\n// import { scaleTime, scaleLinear } from '@vx/scale';\r\n// import { AreaClosed } from '@vx/shape';\r\n// import { AxisLeft, AxisBottom } from '@vx/axis';\r\n// import { LinearGradient } from '@vx/gradient';\r\n// import { extent, max } from 'd3-array';\r\n\r\n\r\nexport default class StockChart extends React.Component {\r\n    state = {data : []}\r\n    \r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.symbol){\r\n      //console.log(`Checking chart for ${this.props.symbol}`)\r\n      if (prevProps.symbol !== this.props.symbol){\r\n        console.log(`Stock Changed Getting chart for ${this.props.symbol}`)\r\n        console.log(this.props)\r\n        console.log(this.prevProps)\r\n        let tempdata = []\r\n          tempdata =  this.props.chartData.candles.map(_tick => {\r\n            if (Math.min(_tick.open, _tick.close, _tick.high, _tick.low) < this.min) this.min = Math.min(_tick.open, _tick.close, _tick.high, _tick.low)\r\n            if (Math.max(_tick.open, _tick.close, _tick.high, _tick.low) < this.max) this.max = Math.max(_tick.open, _tick.close, _tick.high, _tick.low)\r\n            //console.log({x: _tick.datetime, y: _tick.close})\r\n            this.tickValues.push(_tick.datetime)\r\n            return {x: _tick.datetime, y: _tick.close}\r\n          })\r\n          console.log(tempdata)\r\n          this.setState({data: tempdata})\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  x = \"datetime\"\r\n  y = \"close\"\r\n  width = 1000;\r\n  height = 500;\r\n  min = 0.02\r\n  max = 0.1\r\n  tickValues = []\r\n\r\n\r\n  render () {\r\n    //console.log(this.props)\r\n    return(\r\n      <VictoryChart width={1000} height={400} theme={VictoryTheme.material}>\r\n        <VictoryLine\r\n          data={this.state.data}\r\n          padding={{ top: 20, bottom: 60 }}\r\n            style={{\r\n            data: { stroke: \"#c43a31\" , width: 1},\r\n            parent: { border: \"1px solid #ccc\"}\r\n          }}\r\n        />\r\n        \r\n        <VictoryAxis dependentAxis\r\n            //domain={[-10, 15]}\r\n            offsetX={50}\r\n            tickFormat={ (t) => `$${t}`}\r\n\r\n            orientation=\"left\"\r\n            standalone={false}\r\n            \r\n          />\r\n        \r\n        <VictoryAxis independentAxis\r\n            //domain={[-10, 15]}\r\n            offsetX={50}\r\n            tickFormat={ (t) => {moment(t).toString()}}\r\n            orientation=\"bottom\"\r\n            standalone={false}\r\n            \r\n          />\r\n\r\n\r\n      </VictoryChart>\r\n    )\r\n  }\r\n\r\n}","/mnt/f/Projects/react-mm/src/lib/canvasjs.react.js",[],"/mnt/f/Projects/react-mm/src/lib/canvasjs.min.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":9},{"ruleId":"158","severity":1,"message":"162","line":8,"column":10,"nodeType":"160","messageId":"161","endLine":8,"endColumn":15},{"ruleId":"158","severity":1,"message":"163","line":8,"column":25,"nodeType":"160","messageId":"161","endLine":8,"endColumn":29},{"ruleId":"158","severity":1,"message":"164","line":8,"column":31,"nodeType":"160","messageId":"161","endLine":8,"endColumn":41},{"ruleId":"158","severity":1,"message":"165","line":8,"column":42,"nodeType":"160","messageId":"161","endLine":8,"endColumn":45},{"ruleId":"158","severity":1,"message":"166","line":8,"column":47,"nodeType":"160","messageId":"161","endLine":8,"endColumn":50},{"ruleId":"158","severity":1,"message":"167","line":8,"column":52,"nodeType":"160","messageId":"161","endLine":8,"endColumn":56},{"ruleId":"158","severity":1,"message":"168","line":9,"column":10,"nodeType":"160","messageId":"161","endLine":9,"endColumn":22},{"ruleId":"158","severity":1,"message":"169","line":9,"column":24,"nodeType":"160","messageId":"161","endLine":9,"endColumn":38},{"ruleId":"158","severity":1,"message":"170","line":9,"column":40,"nodeType":"160","messageId":"161","endLine":9,"endColumn":60},{"ruleId":"158","severity":1,"message":"171","line":11,"column":8,"nodeType":"160","messageId":"161","endLine":11,"endColumn":17},{"ruleId":"158","severity":1,"message":"172","line":15,"column":10,"nodeType":"160","messageId":"161","endLine":15,"endColumn":14},{"ruleId":"158","severity":1,"message":"173","line":241,"column":7,"nodeType":"160","messageId":"161","endLine":241,"endColumn":14},{"ruleId":"158","severity":1,"message":"167","line":2,"column":46,"nodeType":"160","messageId":"161","endLine":2,"endColumn":50},{"ruleId":"158","severity":1,"message":"174","line":4,"column":13,"nodeType":"160","messageId":"161","endLine":4,"endColumn":14},{"ruleId":"158","severity":1,"message":"175","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":19},{"ruleId":"158","severity":1,"message":"176","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":26},{"ruleId":"158","severity":1,"message":"170","line":8,"column":40,"nodeType":"160","messageId":"161","endLine":8,"endColumn":60},{"ruleId":"177","severity":1,"message":"178","line":17,"column":58,"nodeType":"179","messageId":"180","endLine":17,"endColumn":60},{"ruleId":"181","severity":1,"message":"182","line":71,"column":3,"nodeType":"183","endLine":71,"endColumn":15},{"ruleId":"158","severity":1,"message":"184","line":2,"column":9,"nodeType":"160","messageId":"161","endLine":2,"endColumn":14},{"ruleId":"158","severity":1,"message":"185","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":17},{"ruleId":"158","severity":1,"message":"171","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":17},{"ruleId":"158","severity":1,"message":"186","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":16},{"ruleId":"158","severity":1,"message":"187","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":9,"column":8,"nodeType":"160","messageId":"161","endLine":9,"endColumn":9},{"ruleId":"158","severity":1,"message":"168","line":10,"column":10,"nodeType":"160","messageId":"161","endLine":10,"endColumn":22},{"ruleId":"158","severity":1,"message":"188","line":11,"column":8,"nodeType":"160","messageId":"161","endLine":11,"endColumn":14},{"ruleId":"158","severity":1,"message":"189","line":16,"column":9,"nodeType":"160","messageId":"161","endLine":16,"endColumn":16},{"ruleId":"158","severity":1,"message":"190","line":17,"column":9,"nodeType":"160","messageId":"161","endLine":17,"endColumn":16},{"ruleId":"158","severity":1,"message":"184","line":3,"column":9,"nodeType":"160","messageId":"161","endLine":3,"endColumn":14},{"ruleId":"158","severity":1,"message":"185","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":17},{"ruleId":"158","severity":1,"message":"186","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":16},{"ruleId":"158","severity":1,"message":"187","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":22},{"ruleId":"158","severity":1,"message":"168","line":8,"column":10,"nodeType":"160","messageId":"161","endLine":8,"endColumn":22},{"ruleId":"158","severity":1,"message":"169","line":8,"column":24,"nodeType":"160","messageId":"161","endLine":8,"endColumn":38},{"ruleId":"158","severity":1,"message":"170","line":8,"column":40,"nodeType":"160","messageId":"161","endLine":8,"endColumn":60},{"ruleId":"158","severity":1,"message":"188","line":9,"column":8,"nodeType":"160","messageId":"161","endLine":9,"endColumn":14},{"ruleId":"158","severity":1,"message":"190","line":14,"column":9,"nodeType":"160","messageId":"161","endLine":14,"endColumn":16},{"ruleId":"158","severity":1,"message":"191","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":17},{"ruleId":"158","severity":1,"message":"164","line":6,"column":30,"nodeType":"160","messageId":"161","endLine":6,"endColumn":40},{"ruleId":"158","severity":1,"message":"165","line":6,"column":41,"nodeType":"160","messageId":"161","endLine":6,"endColumn":44},{"ruleId":"158","severity":1,"message":"166","line":6,"column":46,"nodeType":"160","messageId":"161","endLine":6,"endColumn":49},{"ruleId":"158","severity":1,"message":"167","line":6,"column":51,"nodeType":"160","messageId":"161","endLine":6,"endColumn":55},{"ruleId":"158","severity":1,"message":"192","line":8,"column":23,"nodeType":"160","messageId":"161","endLine":8,"endColumn":38},{"ruleId":"158","severity":1,"message":"190","line":10,"column":17,"nodeType":"160","messageId":"161","endLine":10,"endColumn":24},{"ruleId":"158","severity":1,"message":"193","line":10,"column":26,"nodeType":"160","messageId":"161","endLine":10,"endColumn":31},{"ruleId":"158","severity":1,"message":"194","line":13,"column":9,"nodeType":"160","messageId":"161","endLine":13,"endColumn":16},{"ruleId":"158","severity":1,"message":"195","line":13,"column":18,"nodeType":"160","messageId":"161","endLine":13,"endColumn":27},{"ruleId":"158","severity":1,"message":"174","line":2,"column":13,"nodeType":"160","messageId":"161","endLine":2,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":9},{"ruleId":"158","severity":1,"message":"165","line":2,"column":34,"nodeType":"160","messageId":"161","endLine":2,"endColumn":37},{"ruleId":"158","severity":1,"message":"166","line":2,"column":39,"nodeType":"160","messageId":"161","endLine":2,"endColumn":42},{"ruleId":"158","severity":1,"message":"174","line":4,"column":13,"nodeType":"160","messageId":"161","endLine":4,"endColumn":14},{"ruleId":"158","severity":1,"message":"188","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":14},{"ruleId":"158","severity":1,"message":"196","line":10,"column":5,"nodeType":"160","messageId":"161","endLine":10,"endColumn":13},{"ruleId":"181","severity":1,"message":"182","line":43,"column":3,"nodeType":"183","endLine":43,"endColumn":15},{"ruleId":"158","severity":1,"message":"167","line":1,"column":10,"nodeType":"160","messageId":"161","endLine":1,"endColumn":14},{"ruleId":"158","severity":1,"message":"174","line":4,"column":13,"nodeType":"160","messageId":"161","endLine":4,"endColumn":14},{"ruleId":"158","severity":1,"message":"176","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":26},{"ruleId":"158","severity":1,"message":"197","line":98,"column":17,"nodeType":"160","messageId":"161","endLine":98,"endColumn":26},{"ruleId":"181","severity":1,"message":"182","line":106,"column":25,"nodeType":"183","endLine":106,"endColumn":37},{"ruleId":"158","severity":1,"message":"184","line":2,"column":9,"nodeType":"160","messageId":"161","endLine":2,"endColumn":14},{"ruleId":"158","severity":1,"message":"185","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":9},{"ruleId":"158","severity":1,"message":"168","line":7,"column":10,"nodeType":"160","messageId":"161","endLine":7,"endColumn":22},{"ruleId":"158","severity":1,"message":"169","line":7,"column":24,"nodeType":"160","messageId":"161","endLine":7,"endColumn":38},{"ruleId":"158","severity":1,"message":"170","line":7,"column":40,"nodeType":"160","messageId":"161","endLine":7,"endColumn":60},{"ruleId":"158","severity":1,"message":"188","line":8,"column":8,"nodeType":"160","messageId":"161","endLine":8,"endColumn":14},{"ruleId":"158","severity":1,"message":"189","line":10,"column":9,"nodeType":"160","messageId":"161","endLine":10,"endColumn":16},{"ruleId":"158","severity":1,"message":"190","line":11,"column":9,"nodeType":"160","messageId":"161","endLine":11,"endColumn":16},{"ruleId":"158","severity":1,"message":"198","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":20},{"ruleId":"158","severity":1,"message":"199","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":16},{"ruleId":"158","severity":1,"message":"200","line":6,"column":13,"nodeType":"160","messageId":"161","endLine":6,"endColumn":14},{"ruleId":"158","severity":1,"message":"174","line":7,"column":13,"nodeType":"160","messageId":"161","endLine":7,"endColumn":14},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'Menu' is defined but never used.","'Breadcrumb' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'UserOutlined' is defined but never used.","'LaptopOutlined' is defined but never used.","'NotificationOutlined' is defined but never used.","'Dashboard' is defined but never used.","'data' is defined but never used.","'excTime' is assigned a value but never used.","'$' is defined but never used.","'StockDetail' is defined but never used.","'OptionChainHeatmap' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Badge' is defined but never used.","'StockCard' is defined but never used.","'currency' is defined but never used.","'PriceIndicator' is defined but never used.","'moment' is defined but never used.","'TabPane' is assigned a value but never used.","'Content' is assigned a value but never used.","'connect' is defined but never used.","'SettingOutlined' is defined but never used.","'Sider' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'ItemGroup' is assigned a value but never used.","'CanvasJS' is assigned a value but never used.","'chartData' is assigned a value but never used.","'VictoryBar' is defined but never used.","'ReactDOM' is defined but never used.","'V' is defined but never used.","no-global-assign","no-unsafe-negation"]